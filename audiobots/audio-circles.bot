from random import random as r

"""
Simple audio visualiser.

In Windows the easiest way to get this working is to enable stereo mix on the same device you are outputting
to.
Under some circumstances (using USB speakers) this may not work.
"""
import numpy as np

from sbaudio import audio, scaled_fft, triple, NUM_SAMPLES

def setup():
    global circles
    circles = [None] * 2560

    size(800, 600)
    speed(60)    


def draw():
    global circles
    spectrogram = audio.spectrogram

    for i, v in enumerate(spectrogram[::160]):
        s = (i * v) / NUM_SAMPLES
        circle = circles[i]
        if circle:
            circle.update()
            circle.diam = s * circle.hp
        else:
            if s > 0.05:
                 circles[i] = random_circle()

    transform(CENTER)                 
    background(0, 0, 0)
    #rect(0, 0, WIDTH, HEIGHT) 
    for circle in circles:
        if circle:
            circle.draw()                

    strokewidth(0)
    
def random_circle():
    return Circle(r() * WIDTH, r() * HEIGHT, r() * 100, (0, 0, 0, 0.5), (r(), r(), r()))

class Circle:
    def __init__(self, x, y, diam, sc, fc):
        self.x = x
        self.y = y
        self.diam = diam
        self.sc = sc
        self.fc = fc
        self.hp = 100
        self.energy = 10
    
    def update(self):
        if self.energy:
            e = self.energy / 8.0
            self.diam += e
            self.energy -= int(e) + 1
        else:
           self.diam -= 2
           self.energy += 1

    def draw(self):
        strokewidth(self.diam / 10.0)
        fill(self.fc)
        stroke(self.sc)
        radi = self.diam / 2
        oval(self.x - radi, self.y - radi, self.diam, self.diam)
    
